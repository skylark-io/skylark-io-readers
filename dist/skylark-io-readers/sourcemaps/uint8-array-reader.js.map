{"version":3,"sources":["uint8-array-reader.js"],"names":["define","readers","ArrayReader","Uint8ArrayReader","inherit","klassName","readData","size","this","checkOffset","Uint8Array","result","data","subarray","zero","index"],"mappings":";;;;;;;AAAAA,QACI,YACA,kBACD,SAAUC,EAAQC,GACjB,aAEA,IAAIC,EAAmBD,EAAYE,SAC/BC,UAAW,mBAEXC,SAAW,SAAUC,GAEjB,GADAC,KAAKC,YAAYF,GACJ,IAATA,EACA,OAAO,IAAIG,WAAW,GAE1B,IAAIC,EAASH,KAAKI,KAAKC,SAASL,KAAKM,KAAON,KAAKO,MAAOP,KAAKM,KAAON,KAAKO,MAAQR,GAEjF,OADAC,KAAKO,OAASR,EACPI,KAKf,OAAOV,EAAQE,iBAAmBA","file":"../uint8-array-reader.js","sourcesContent":["define([\n    \"./readers\",\n    './array-reader'\n], function (readers,ArrayReader) {\n    'use strict';\n\n    var Uint8ArrayReader = ArrayReader.inherit({\n        klassName: \"Uint8ArrayReader\",\n\n        readData : function (size) {\n            this.checkOffset(size);\n            if (size === 0) {\n                return new Uint8Array(0);\n            }\n            var result = this.data.subarray(this.zero + this.index, this.zero + this.index + size);\n            this.index += size;\n            return result;\n        }\n    });\n\n\n    return readers.Uint8ArrayReader = Uint8ArrayReader;\n\n});"]}